{"version":3,"sources":["config/index.js","redux/sagas/index.js","services/index.js","redux/reducers/index.js","components/Header/index.js","components/Header/Header.js","components/LoadingSpinner/LoadingSpinner.js","components/LoadingSpinner/index.js","redux/actions/index.js","components/FormElements/FormElements.js","components/FormElements/index.js","forms/index.js","components/CategoriesListItems/CategoriesListItems.js","components/CategoriesListItems/index.js","components/ManageCategories/ManageCategories.js","components/ManageCategories/index.js","components/ManageRecipes/index.js","components/ManageRecipes/ManageRecipes.js","components/ModalCommon/ModalCommon.js","components/ModalCommon/index.js","components/ErrorGlobal/ErrorGlobal.js","components/ErrorGlobal/index.js","components/ManageArticles/index.js","components/ManageArticles/ManageArticles.js","components/App.js","index.js"],"names":["API_BASE","fetchApiCall","saga","api_endpoints","API_ALL_CATEGORIES","API_CREATE_CATEGORY","API_EDIT_CATEGORY","API_DELETE_CATEGORY","actionPrefix","method","params","urlSuffix","init","headers","body","JSON","stringify","fetch","response","json","put","type","ok","err","all","takeEvery","args","prepareCategoriesForSelect","categories","currentParentId","level","itemsOut","push","key","value","filter","e","parentId","sort","a","b","title","localeCompare","map","item","i","_id","concat","deleteCategoryFromContent","currentCategoryId","idsToDelete","indexOf","prepareCurrentFormErrors","out","param","message","reducer","state","action","undefined","loading","categoriesOk","errorGlobal","currentFormErrors","currentCategories","modalData","show","errorGlobalMsg","toString","itemData","currentFormValues","name","Header","className","to","exact","icon","text","activeClassName","Component","LoadingSpinner","connect","initModal","FormElements","props","values","updateFormItem","items","itemValue","default","itemName","this","target","setState","commonParams","id","onChange","htmlFor","required","selectOptions","option","replace","defaultProps","onSubmit","mapDispatchToProps","ADD_CATEGORY_FORM","EDIT_CATEGORY_FORM","CategoriesListItems","categoryId","titleText","isForm","bodyText","find","closeBtnText","confirmBtnText","closeBtnVariant","confirmBtnVariant","confirmAddData","closeHandler","hideModal","formSubmitHandler","editCategory","preventDefault","confirmHandler","deleteCategory","variant","size","onClick","initEditModal","initDeleteModal","paramsOut","ManageCategories","createCategory","getAllCategories","initAddModal","ManageRecipes","ModalCommon","innerContent","closeButton","Title","Body","Footer","aria-labelledby","centered","onHide","ErrorGlobal","ManageArticles","App","path","render","component","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","document","getElementById"],"mappings":"sLAAaA,EAAW,iD,WCUdC,G,WAceC,GArBnBC,EAAgB,CAClBC,mBAAoBJ,EAAW,eAC/BK,oBAAqBL,EAAW,kBAChCM,kBAAmBN,EAAW,kBAC9BO,oBAAqBP,EAAW,aAGpC,SAAUC,EAAaO,GAAvB,4FAKyB,OALYC,EAArC,+BAA8C,MAAOC,EAArD,+BAA8D,GAAIC,EAAlE,+BAA8E,GAA9E,SAEYC,EAAO,CAAEH,SAASI,QAAS,CAAE,eAAgB,qBAClC,QAAXJ,GAA+B,SAAXA,IAAmBG,EAAKE,KAAOC,KAAKC,UAAUN,IAH9E,SAK+BO,MAAMd,EAAc,OAASK,GAAgBG,EAAWC,GALvF,OAOqB,OAFPM,EALd,iBAO2BA,EAASC,OAPpC,QAQQ,OADMA,EAPd,iBAQcC,YAAI,CAACC,KAAMb,EAAe,YAAac,GAAIJ,EAASI,GAAIH,KAAMA,EAAMT,OAAQA,EAAQC,UAAWA,IAR7G,gCAUQ,OAVR,oCAUcS,YAAI,CAACC,KAAM,eAAgBE,IAAG,OAV5C,qDAce,SAAUrB,IAAV,gEACX,OADW,SACLsB,YAAI,CACNC,YAAU,qBAAsB,kBAAMxB,EAAa,iBAAkB,SACrEwB,YAAU,kBAAmB,SAACC,GAAD,OAAUzB,EAAa,kBAAmB,OAAQyB,EAAI,UACnFD,YAAU,gBAAiB,SAACC,GAAD,OAAUzB,EAAa,gBAAiB,MAAOyB,EAAI,UAC9ED,YAAU,kBAAmB,SAACC,GAAD,OAAUzB,EAAa,kBAAmB,SAAU,GAAIyB,EAAI,OAAJ,SAL9E,sC,4BCxBR,SAASC,EAA2BC,GAAgD,IAApCC,EAAmC,uDAAjB,KAAMC,EAAW,uDAAH,EAC/EC,EAAW,GAiBf,OAhBc,IAAVD,GACAC,EAASC,KAAK,CAACC,IAAK,GAAIC,MAAO,MAEnCN,EAAWO,OAAO,SAACC,GACf,OAAOA,EAAEC,WAAaR,IACvBS,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAMC,cAAcF,EAAEC,SAAQE,IAAI,SAACC,GAEnD,IADA,IAAIH,EAAQG,EAAKH,MACRI,EAAI,EAAGA,EAAIf,EAAOe,IAAKJ,EAAQ,OAASA,EAOjD,OANAV,EAASC,KAAK,CACVC,IAAKW,EAAKE,IACVZ,MAAOO,EACPX,MAAOA,IAEXC,EAAWA,EAASgB,OAAOpB,EAA2BC,EAAYgB,EAAKE,IAAKhB,EAAQ,KAC7E,IAEJC,EAGJ,SAASiB,EAA0BpB,GAAuC,IAA3BqB,EAA0B,uDAAN,KAClEC,EAAc,CAACD,GAOnB,OALAtB,EAA2BC,EAAYqB,EAAmB,GAAGN,IAAI,SAACC,GAE9D,OADAM,EAAYlB,KAAKY,EAAKX,MACf,IAGJL,EAAWO,OAAO,SAACS,GAAW,OAA0C,IAAnCM,EAAYC,QAAQP,EAAKE,OAIlE,SAASM,EAAyBjC,GACrC,IAAIkC,EAAM,GAKV,OAJAlC,EAAKwB,IAAI,SAACC,GAEN,OADAS,EAAIT,EAAKU,OAASV,EAAKW,SAChB,IAEJF,E,mjBCrCX,IAiFeG,EAjFC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOrC,MAEX,IAAK,qBACD,OAAO,EAAP,GAAWoC,EAAX,CAAkB7B,gBAAY+B,EAAWC,SAAS,IAGtD,IAAK,0BACD,OAAO,EAAP,GAAWH,EAAX,CAAkBI,aAAcH,EAAOpC,GAAIM,WAAY8B,EAAOvC,KAAMyC,SAAS,EAAOE,aAAa,IAGrG,IAAK,kBACD,OAAO,EAAP,GAAWL,EAAX,CAAkBM,uBAAmBJ,IAGzC,IAAK,2BACD,GAAID,EAAOpC,GAAI,CACX,IAAI0C,EAAiB,YAAOP,EAAM7B,YAClCoC,EAAkBhC,KAAK0B,EAAOvC,MAC9B,IAAM8C,EAAS,KAAOR,EAAMQ,WAE5B,OADAA,EAAUC,MAAO,EACV,EAAP,GAAYT,EAAZ,CAAmB7B,WAAYoC,EAAmBC,YAAWF,uBAAmBJ,IAEhF,OAAO,EAAP,GAAYF,EAAZ,CAAmBM,kBAAmBX,EAAyBM,EAAOvC,QAI9E,IAAK,gBACD,OAAO,EAAP,GAAWsC,EAAX,CAAkBM,uBAAmBJ,IAGzC,IAAK,yBACD,GAAID,EAAOpC,GAAI,CACX,IAAI0C,EAAoB,YAAIP,EAAM7B,YAAYO,OAAO,SAACC,GAAQ,OAAOA,EAAEU,MAAQY,EAAOvC,KAAK2B,MAC3FkB,EAAkBhC,KAAK0B,EAAOvC,MAC9B,IAAM8C,EAAS,KAAOR,EAAMQ,WAE5B,OADAA,EAAUC,MAAO,EACV,EAAP,GAAYT,EAAZ,CAAmB7B,WAAYoC,EAAmBC,YAAWF,uBAAmBJ,IAEhF,OAAO,EAAP,GAAYF,EAAZ,CAAmBM,kBAAmBX,EAAyBM,EAAOvC,QAK9E,IAAK,2BACD,IAAM8C,EAAS,KAAOR,EAAMQ,WAE5B,OADAA,EAAUC,MAAO,EACbR,EAAOpC,GACA,EAAP,GAAWmC,EAAX,CAAkB7B,WAAYoB,EAA0BS,EAAM7B,WAAY8B,EAAO/C,WAAYsD,YAAWH,aAAa,IAE9G,EAAP,GAAWL,EAAX,CAAkBQ,YAAWH,aAAa,EAAMK,eAAgBT,EAAOvC,KAAK,GAAGoC,UAMvF,IAAK,eACD,OAAO,EAAP,GAAWE,EAAX,CAAkBG,SAAS,EAAOE,aAAa,EAAMK,eAAgBT,EAAOnC,IAAI6C,aAEpF,IAAK,mBACD,GAAwB,OAApBV,EAAOW,SACP,OAAO,EAAP,GAAWZ,EAAX,CAAkBa,uBAAmBX,IAErC,IAAIW,EAAiB,KAAOb,EAAMa,mBAElC,OADAA,EAAkBZ,EAAOW,SAASE,MAAQb,EAAOW,SAASnC,MACnD,EAAP,GAAWuB,EAAX,CAAkBa,sBAG1B,IAAK,aACD,IAAML,EAAS,KAAOR,EAAMQ,WAE5B,OADAA,EAAUC,MAAO,EACV,EAAP,GAAWT,EAAX,CAAkBQ,cAEtB,IAAK,aACD,OAAO,EAAP,GAAWR,EAAX,CAAkBQ,UAAWP,EAAOO,UAAWF,uBAAmBJ,IAEtE,QACI,OAAOF,I,qDC7EJe,E,iLCYP,OACI,yBAAKC,UAAU,0DACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAVZ,CACV,CAACC,GAAG,IAAKC,OAAO,EAAMC,KAAM,OAAQC,KAAM,QAC1C,CAACH,GAAG,qBAAsBE,KAAM,UAAWC,KAAM,cACjD,CAACH,GAAG,kBAAmBE,KAAM,UAAWC,KAAM,WAC9C,CAACH,GAAG,mBAAoBE,KAAM,cAAeC,KAAM,aAO/BlC,IAAI,SAACC,GACT,OACI,wBAAI6B,UAAU,WAAWxC,IAAK,iBAAmBW,EAAK8B,IAAK,kBAAC,IAAD,CAASD,UAAU,WAAWE,MAAO/B,EAAK+B,MAAOD,GAAI9B,EAAK8B,GAAII,gBAAgB,UAAS,uBAAGL,UAAW,SAAS7B,EAAKgC,OAAnH,IAA+HhC,EAAKiC,gB,GAhB3LE,aCAhCC,G,MAAiB,qBAAGpB,QAEhB,yBAAKa,UAAU,UAAf,cAEA,OCNOO,EDUfA,EAAiBC,YADO,SAACxB,GAAD,MAAY,CAACG,QAASH,EAAMG,UACX,KAAxBqB,CAA8BD,G,mjBEVxC,IA+CME,EAAY,SAACjB,GACtB,MAAO,CACH5C,KAAM,aACN4C,UAAU,KAAKA,EAAN,CAAiBC,MAAM,M,iBC/ClCiB,E,YASF,WAAYC,GAAQ,IAAD,sBACf,4CAAMA,IACN,IAAIC,EAAS,GAFE,OAGf,EAAKD,MAAME,eAAe,MAC1B,EAAKF,MAAMG,MAAM5C,IAAI,SAACC,GAClB,IAAM4C,OAA8C7B,IAAjC,EAAKyB,MAAMC,OAAOzC,EAAK2B,MAAuB,EAAKa,MAAMC,OAAOzC,EAAK2B,MAAQ3B,EAAK6C,QAGrG,OAFA,EAAKL,MAAME,eAAe,CAAEf,KAAM3B,EAAK2B,KAAKrC,MAAOsD,IACnDH,EAAOzC,EAAK2B,MAAsB,OAAdiB,EAAqB,GAAKA,GACvC,IAEX,EAAK/B,MAAQ4B,EAVE,E,sEAaVK,EAAUtD,GACfuD,KAAKP,MAAME,eAAe,CAAEf,KAAMmB,EAASxD,MAAOE,EAAEwD,OAAO1D,QAC3DyD,KAAKE,SAAL,eAAgBH,EAAWtD,EAAEwD,OAAO1D,U,+BAG9B,IAAD,OACL,OACI,oCACKyD,KAAKP,MAAMG,MAAM5C,IAAI,SAACC,GACnB,IAAMkD,EAAe,CACjBC,GAAI,cAAcnD,EAAK2B,KACvBE,UAAW,eACXF,KAAM3B,EAAK2B,KACXrC,MAAO,EAAKuB,MAAMb,EAAK2B,MACvByB,SAAU,SAAC5D,GAAD,OAAO,EAAK4D,SAASpD,EAAK2B,KAAMnC,KAG9C,MAAkB,WAAdQ,EAAKvB,KACE,yCAAOY,IAAK,QAAUW,EAAK2B,KAC9BlD,KAAK,UACDyE,IAED,yBAAKrB,UAAU,aAAaxC,IAAK,QAAUW,EAAK2B,MACnD,2BAAO0B,QAAS,cAAgBrD,EAAK2B,MAAO3B,EAAKsD,UACjD,0BAAMzB,UAAU,gCAAhB,KADA,IAC0D7B,EAAKH,YAClBkB,IAA5C,EAAKyB,MAAMrB,kBAAkBnB,EAAK2B,OACnC,yBAAKE,UAAU,eAAe,EAAKW,MAAMrB,kBAAkBnB,EAAK2B,OAC9D,WACM,OAAQ3B,EAAKvB,MACT,IAAK,SACD,OAAQ,2BAAYyE,OACyBnC,IAAxC,EAAKyB,MAAMe,cAAcvD,EAAK2B,OAAuB,EAAKa,MAAMe,cAAcvD,EAAK2B,MAAM5B,IAAI,SAACyD,GAC3F,OAAO,4BAAQnE,IAAK,eAAiBW,EAAK2B,KAAO6B,EAAOnE,IACzCC,MAAOkE,EAAOnE,KAAMmE,EAAOlE,MAAMmE,QAAQ,KAAM,YAI1E,IAAK,WACD,OAAO,6BAAcP,GACzB,QACI,OAAO,yCACHzE,KAAK,QACDyE,KAftB,W,GAjDHf,aAArBI,EACKmB,aAAe,CAClBf,MAAO,GACPF,OAAQ,GACRc,cAAe,GACfI,SAAU,KACVxC,kBAAmB,IAsE3B,IAGMyC,EAAqB,CAAClB,eD1BE,SAACjB,GAC3B,MAAO,CACHhD,KAAM,mBACNgD,cE3DOc,EDmFfA,EAAeF,YAJS,SAACxB,GACrB,MAAO,CAAEa,kBAAmBb,EAAMa,kBAAmBP,kBAAmBN,EAAMM,oBAG1CyC,EAAzBvB,CAA6CE,GErF/CsB,EAAoB,CAC7BlB,MAAO,CACH,CACI9C,MAAO,kBACP8B,KAAM,WACNlD,KAAM,SACN6E,UAAU,EACVT,QAAS,IAEb,CACIhD,MAAO,OACP8B,KAAM,QACNlD,KAAM,OACN6E,UAAU,EACVT,QAAS,MAKRiB,EAAqB,CAC9BnB,MAAO,CACH,CACI9C,MAAO,kBACP8B,KAAM,WACNlD,KAAM,SACN6E,UAAU,EACVT,QAAS,IAEb,CACIhD,MAAO,OACP8B,KAAM,QACNlD,KAAM,OACN6E,UAAU,EACVT,QAAS,IAEb,CACIhD,MAAO,GACP8B,KAAM,MACNlD,KAAM,SACNoE,QAAS,MC/BfkB,E,sLAGYC,GAAa,IAAD,OACtBjB,KAAKP,MAAMF,UAAU,CACjB2B,UAAW,gBACXC,QAAQ,EACRC,SAAU,kBAAC,EAAD,iBAAkBL,EAAlB,CAAsCrB,OAASM,KAAKP,MAAMG,MAAMyB,KAAK,SAAC5E,GAAD,OAAOA,EAAC,MAAYwE,IAAcT,cAAe,CAAE9D,SAAUV,EAA2BgE,KAAKP,MAAMG,WAClL0B,aAAc,SACdC,eAAgB,OAChBC,gBAAiB,YACjBC,kBAAmB,UACnBC,eAAgB,CAAEhG,KAAM,gBAAiB,IAAOuF,GAChDU,aAAc,SAAClC,GAAYA,EAAMmC,aACjCC,kBAAmB,SAACpF,EAAGgD,GAAY,EAAKA,MAAMqC,aAAarC,EAAMd,mBAAoBlC,EAAEsF,sB,sCAI/Ed,GAAa,IAAD,OACxBjB,KAAKP,MAAMF,UAAU,CACjB2B,UAAW,kBACXE,SAAU,gBACVE,aAAc,SACdC,eAAgB,SAChBC,gBAAiB,YACjBC,kBAAmB,SACnBC,eAAgB,CAAEhG,KAAM,kBAAmB,IAAOuF,GAClDU,aAAc,SAAClC,GAAYA,EAAMmC,aACjCI,eAAgB,SAACvC,GAAY,EAAKA,MAAMwC,eAAexC,EAAMiC,eAAevE,U,+BAI1E,IAAD,OACL,OACI,iCAC0Ba,IAArBgC,KAAKP,MAAMG,MAAsBI,KAAKP,MAAMG,MAAMpD,OAAO,SAACC,GAAD,OAAOA,EAAC,WAAiB,EAAKgD,MAAM/C,WAAUC,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAMC,cAAcF,EAAEC,SAAQE,IAAI,SAACC,GACxJ,OACI,wBAAIX,IAAKW,EAAKE,KACTF,EAAKH,MACN,kBAAC,IAAD,CAAQoF,QAAQ,YAAYC,KAAK,KAAKrD,UAAU,WAAWsD,QAAS,WAAQ,EAAKC,cAAcpF,EAAKE,OAAS,uBAAG2B,UAAU,kBAC1H,kBAAC,IAAD,CAAQoD,QAAQ,SAASC,KAAK,KAAKrD,UAAU,MAAMsD,QAAS,WAAS,EAAKE,gBAAgBrF,EAAKE,OAAS,uBAAG2B,UAAU,iBACrH,kBAACkC,EAAD,CAAqB1E,IAAK,OAAOW,EAAKE,IAAKyC,MAAO,EAAKH,MAAMG,MAAOlD,SAAUO,EAAKE,IAAKoC,UAAW,EAAKE,MAAMF,UAAWuC,aAAc,EAAKrC,MAAMqC,aAAcG,eAAgB,EAAKxC,MAAMwC,oBAGlM,Q,GA5Ca7C,aAA5B4B,EACKL,aAAe,CAAEjE,SAAU,MAkDtC,IAAMmE,EAAqB,CAACtB,UAAWA,EAAW0C,eJ3BpB,SAAC9E,GAC3B,MAAO,CACHzB,KAAM,kBACNX,OAAQ,CACJoC,SIuBsE2E,aJxCtD,SAAC/G,GACzB,IAAMwH,EAAS,KAAOxH,GAItB,MAH2B,KAAvBwH,EAAU7F,WACV6F,EAAU7F,SAAW,MAElB,CACHhB,KAAM,gBACNX,OAAQwH,KKxBDvB,ED0DfA,EAAsB1B,YAAQ,KAAMuB,EAAdvB,CAAkC0B,GElDlDwB,E,uLAEc,IAAD,OACXxC,KAAKP,MAAMF,UAAU,CACjB2B,UAAW,mBACXC,QAAQ,EACRC,SAAU,kBAAC,EAAD,iBAAkBN,EAAlB,CAAqCN,cAAe,CAAE9D,SAAUV,EAA2BgE,KAAKP,MAAMxD,gBAChHqF,aAAc,SACdC,eAAgB,MAChBC,gBAAiB,YACjBC,kBAAmB,UACnBC,eAAgB,CAAEhG,KAAM,gBACxBiG,aAAc,SAAClC,GAAYA,EAAMmC,aACjCC,kBAAmB,SAACpF,EAAGgD,GAAY,EAAKA,MAAMgD,eAAehD,EAAMd,mBAAoBlC,EAAEsF,sB,0CAK7F/B,KAAKP,MAAMiD,qB,+BAGL,IAAD,OACL,OACI,oCACI,wBAAI5D,UAAU,QAAd,qBACA,kBAAC,EAAD,WAC2Bd,IAA1BgC,KAAKP,MAAMxD,aAA6B+D,KAAKP,MAAMxB,SAChD,oCACI,kBAAC,IAAD,CAAQiE,QAAQ,YAAYC,KAAK,KAAKrD,UAAU,WAAYsD,QAAS,WAAQ,EAAKO,iBAAmB,uBAAG7D,UAAU,eAAlH,iBACA,kBAAC,EAAD,CAAqBc,MAAOI,KAAKP,MAAMxD,mB,GA7BhCmD,aAsCzByB,EAAqB,CAAC6B,iBN9CI,WAC5B,MAAO,CACHhH,KAAM,uBM4CkD+G,eNxClC,SAAC1H,GAC3B,IAAMwH,EAAS,KAAOxH,GAItB,MAH2B,KAAvBwH,EAAU7F,WACV6F,EAAU7F,SAAW,MAElB,CACHhB,KAAM,kBACNX,OAAQwH,IMiCgFhD,UAAWA,GC9C5FiD,ED+CfA,EAAmBlD,YAFK,SAACxB,GAAD,MAAY,CAAE7B,WAAY6B,EAAM7B,WAAYgC,QAASH,EAAMG,UAExC4C,EAAxBvB,CAA4CkD,GE/ChDI,E,iLCKP,OACI,8BACI,8CACA,kBAAC,EAAD,W,GAN2BxD,a,mPCGrCyD,G,iLAgBQ,IAAD,OACDC,EACA,oCACI,kBAAC,KAAMjE,OAAP,CAAckE,aAAW,GACrB,kBAAC,KAAMC,MAAP,KAAchD,KAAKP,MAAMyB,YAE7B,kBAAC,KAAM+B,KAAP,KACKjD,KAAKP,MAAM2B,UAEhB,kBAAC,KAAM8B,OAAP,KACI,kBAAC,IAAD,CAAQhB,QAASlC,KAAKP,MAAM+B,gBAAiBY,QAAS,kBAAM,EAAK3C,MAAMkC,aAAa,EAAKlC,SACpFO,KAAKP,MAAM6B,cAEhB,kBAAC,IAAD,CAAQY,QAASlC,KAAKP,MAAMgC,kBAAmBW,QAAS,kBAAM,EAAK3C,MAAMuC,eAAe,EAAKvC,QAAQ/D,KAAMsE,KAAKP,MAAM0B,OAAS,SAAW,UACrInB,KAAKP,MAAM8B,kBAM5B,OACI,kBAAC,KAAD,CACOhD,KAAMyB,KAAKP,MAAMlB,KACjB4E,kBAAgB,gCAChBC,UAAQ,EACRC,OAAQ,kBAAM,EAAK5D,MAAMkC,aAAa,EAAKlC,SAC7CO,KAAKP,MAAM0B,OACR,0BAAMP,SAAU,SAACnE,GAAD,OAAO,EAAKgD,MAAMoC,kBAAkBpF,EAAG,EAAKgD,SAASqD,GAErEA,O,GA7CM1D,aAApByD,GAEKlC,aAAe,CAClBpC,MAAM,EACN4C,QAAQ,EACRD,UAAW,UACXE,SAAU,SACVE,aAAc,UACdC,eAAgB,YAChBC,gBAAiB,YACjBC,kBAAmB,SACnBE,aAAc,SAAClC,GAAYA,EAAMmC,aACjCI,eAAgB,aAChBH,kBAAmB,SAACpF,EAAEgD,GAAYhD,EAAEsF,mBAuC5C,IACMlB,GAAqB,CAAEe,UVjBJ,WACrB,MAAO,CACHlG,KAAM,gBW3CCmH,GD4DfA,GAAcvD,YAHU,SAACxB,GAAD,O,uVAAA,IAAiBA,EAAMQ,UAAvB,CAAkCK,kBAAmBb,EAAMa,qBAG7CkC,GAAxBvB,CAA4CuD,I,oBE1DpDS,G,iLAEE,OACI,kBAAC,KAAD,CAAOpB,QAAQ,UAAf,yBAC2BlC,KAAKP,MAAMjB,oB,GAJxBY,aCFXkE,GDafA,GAAchE,YADU,SAACxB,GAAD,MAAY,CAAEU,eAAgBV,EAAMU,iBACtB,KAAxBc,CAA8BgE,IEb7BC,G,iLCKP,OACI,8BACI,+CACA,kBAAC,EAAD,W,GAN4BnE,aCQtCoE,G,iLAEE,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACCxD,KAAKP,MAAMtB,aAAe,kBAAC,GAAD,MAC3B,yBAAKW,UAAU,kBACX,kBAAC,IAAD,CAAO2E,KAAK,IAAIC,OAAQ,kBAAM,2DAAqC1E,OAAK,IACxE,kBAAC,IAAD,CAAOyE,KAAK,sBAAsBE,UAAWnB,IAC7C,kBAAC,IAAD,CAAOiB,KAAK,mBAAmBE,UAAWf,IAC1C,kBAAC,IAAD,CAAOa,KAAK,oBAAoBE,UAAWJ,MAE/C,kBAAC,GAAgBvD,KAAKP,MAAMnB,gB,GAZ1Bc,aAqBHoE,GADfA,GAAMlE,YAFkB,SAACxB,GAAD,MAAY,CAAEK,YAAaL,EAAMK,cAE3B,KAAxBmB,CAA8BkE,ICnB9BI,GAAiBC,cACjBC,GAAQC,YACVlG,EACAmG,YAAgBJ,KAEpBA,GAAeK,IAAI1J,GAEnBmJ,iBACK,kBAAC,IAAD,CAAUI,MAAOA,IACd,kBAAC,GAAD,OACUI,SAASC,eAAe,U","file":"static/js/main.34599af0.chunk.js","sourcesContent":["export const API_BASE = \"https://test-task-server.herokuapp.com/api/v1/\";\n","import { put, takeEvery, all } from 'redux-saga/effects';\nimport { API_BASE } from \"../../config/\";\n\nconst api_endpoints = {\n    API_ALL_CATEGORIES: API_BASE + \"category/all\",\n    API_CREATE_CATEGORY: API_BASE + \"category/create\",\n    API_EDIT_CATEGORY: API_BASE + \"category/update\",\n    API_DELETE_CATEGORY: API_BASE + \"category/\"\n};\n\nfunction* fetchApiCall(actionPrefix, method = 'GET', params = [], urlSuffix = '') {\n    try {\n        let init = { method,  headers: { 'Content-Type': 'application/json'} };\n        if (method !== 'GET' && method !== 'HEAD') init.body = JSON.stringify(params);\n\n        const response = yield fetch(api_endpoints['API_' + actionPrefix] + urlSuffix, init);\n\n        const json = yield response.json();\n        yield put({type: actionPrefix + \"_RECEIVED\", ok: response.ok, json: json, params: params, urlSuffix: urlSuffix});\n    } catch(err) {\n        yield put({type: \"SERVER_ERROR\", err });\n    }\n}\n\nexport default function* saga() {\n    yield all([\n        takeEvery('GET_ALL_CATEGORIES', () => fetchApiCall('ALL_CATEGORIES', 'GET')),\n        takeEvery('CREATE_CATEGORY', (args) => fetchApiCall('CREATE_CATEGORY', 'POST', args['params'])),\n        takeEvery('EDIT_CATEGORY', (args) => fetchApiCall('EDIT_CATEGORY', 'PUT', args['params'])),\n        takeEvery('DELETE_CATEGORY', (args) => fetchApiCall('DELETE_CATEGORY', 'DELETE', [], args['params']['_id'])),\n//        takeEvery('GET_ALL_RECIPES', () => fetchApiCall('ALL_RECIPES', 'GET')),\n//        takeEvery('GET_ALL_ARTICLES', () => fetchApiCall('ALL_ARTICLES', 'GET')),\n    ]);\n}","export function prepareCategoriesForSelect(categories, currentParentId = null, level = 0) {\n    let itemsOut = [];\n    if (level === 0) {\n        itemsOut.push({key: '', value: '-'});\n    }\n    categories.filter((e) => {\n        return e.parentId === currentParentId\n    }).sort((a, b) => a.title.localeCompare(b.title)).map((item) => {\n        let title = item.title;\n        for (let i = 0; i < level; i++) title = \"    \" + title;\n        itemsOut.push({\n            key: item._id,\n            value: title,\n            level: level,\n        });\n        itemsOut = itemsOut.concat(prepareCategoriesForSelect(categories, item._id, level + 1));\n        return true;\n    });\n    return itemsOut;\n}\n\nexport function deleteCategoryFromContent(categories, currentCategoryId = null) {\n    let idsToDelete = [currentCategoryId];\n\n    prepareCategoriesForSelect(categories, currentCategoryId, 1).map((item) => {\n        idsToDelete.push(item.key);\n        return true;\n    });\n\n    return categories.filter((item) => { return idsToDelete.indexOf(item._id) === -1 })\n}\n\n\nexport function prepareCurrentFormErrors(json) {\n    let out = {};\n    json.map((item) => {\n        out[item.param] = item.message;\n        return true;\n    });\n    return out;\n}","import {deleteCategoryFromContent, prepareCurrentFormErrors} from \"../../services\";\n\nconst reducer = (state = {}, action) => {\n    switch (action.type) {\n        // ----------------------------------------------------------\n        case 'GET_ALL_CATEGORIES': {\n            return {...state, categories: undefined, loading: true}\n        }\n\n        case 'ALL_CATEGORIES_RECEIVED': {\n            return {...state, categoriesOk: action.ok, categories: action.json, loading: false, errorGlobal: false }\n        }\n\n        case 'CREATE_CATEGORY': {\n            return {...state, currentFormErrors: undefined}\n        }\n\n        case 'CREATE_CATEGORY_RECEIVED': {\n            if (action.ok) {\n                let currentCategories = [...state.categories];\n                currentCategories.push(action.json);\n                const modalData = {...state.modalData};\n                modalData.show = false;\n                return { ...state, categories: currentCategories, modalData, currentFormErrors: undefined };\n            } else {\n                return { ...state, currentFormErrors: prepareCurrentFormErrors(action.json) };\n            }\n        }\n\n        case 'EDIT_CATEGORY': {\n            return {...state, currentFormErrors: undefined}\n        }\n\n        case 'EDIT_CATEGORY_RECEIVED': {\n            if (action.ok) {\n                let currentCategories = [...state.categories].filter((e) => { return e._id !== action.json._id} );\n                currentCategories.push(action.json);\n                const modalData = {...state.modalData};\n                modalData.show = false;\n                return { ...state, categories: currentCategories, modalData, currentFormErrors: undefined };\n            } else {\n                return { ...state, currentFormErrors: prepareCurrentFormErrors(action.json) };\n            }\n        }\n\n\n        case 'DELETE_CATEGORY_RECEIVED': {\n            const modalData = {...state.modalData};\n            modalData.show = false;\n            if (action.ok) {\n                return {...state, categories: deleteCategoryFromContent(state.categories, action.urlSuffix), modalData, errorGlobal: false}\n            } else {\n                return {...state, modalData, errorGlobal: true, errorGlobalMsg: action.json[0].message }\n            }\n        }\n\n        // ----------------------------------------------------------\n\n        case 'SERVER_ERROR': {\n            return {...state, loading: false, errorGlobal: true, errorGlobalMsg: action.err.toString()}\n        }\n        case 'UPDATE_FORM_ITEM': {\n            if (action.itemData === null) {\n                return {...state, currentFormValues: undefined}\n            } else {\n                let currentFormValues = {...state.currentFormValues};\n                currentFormValues[action.itemData.name] = action.itemData.value;\n                return {...state, currentFormValues}\n            }\n        }\n        case 'HIDE_MODAL': {\n            const modalData = {...state.modalData};\n            modalData.show = false;\n            return {...state, modalData}\n        }\n        case 'INIT_MODAL': {\n            return {...state, modalData: action.modalData, currentFormErrors: undefined  }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import Header from \"./Header\";\n\nexport default Header;","import React, { Component } from 'react';\n\nimport {NavLink} from \"react-router-dom\";\n\nexport default class Header extends Component {\n\n    render() {\n        const links = [\n            {to:'/', exact: true, icon: 'home', text: 'Home'},\n            {to:'/manage_categories', icon: 'sitemap', text: 'Categories'},\n            {to:'/manage_recipes', icon: 'cutlery', text: 'Recipes'},\n            {to:'/manage_articles', icon: 'file-text-o', text: 'Articles'},\n        ];\n\n        return  (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark static-top\">\n                <div className=\"container\">\n                    <ul className=\"navbar-nav\">\n                        { links.map((item) =>  {\n                            return (\n                                <li className=\"nav-item\" key={'header_url_to_' + item.to }><NavLink className=\"nav-link\" exact={item.exact} to={item.to} activeClassName=\"active\"><i className={'fa fa-'+item.icon}></i> {item.text}</NavLink></li>                            );\n                        }) }\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n  \n}\n","import React from 'react';\nimport \"./LoadingSpinner.css\";\nimport {connect} from \"react-redux\";\n\nlet LoadingSpinner = ({ loading }) => (\n    loading ?\n        <div className=\"loader\">Loading...</div>\n            :\n        null\n);\n\nconst mapStateToProps = (state) => ({loading: state.loading})\nLoadingSpinner = connect(mapStateToProps,null)(LoadingSpinner)\nexport default LoadingSpinner;","import LoadingSpinner from \"./LoadingSpinner\";\n\nexport default LoadingSpinner;","// ----------------------------------------------------------\n\nexport const getAllCategories = () => {\n    return {\n        type: 'GET_ALL_CATEGORIES',\n    }\n}\n\nexport const createCategory = (params) => {\n    const paramsOut = {...params};\n    if (paramsOut.parentId === '') {\n        paramsOut.parentId = null;\n    }\n    return {\n        type: 'CREATE_CATEGORY',\n        params: paramsOut\n    }\n}\n\nexport const editCategory = (params) => {\n    const paramsOut = {...params};\n    if (paramsOut.parentId === '') {\n        paramsOut.parentId = null;\n    }\n    return {\n        type: 'EDIT_CATEGORY',\n        params: paramsOut\n    }\n}\n\n\n\nexport const deleteCategory = (_id) => {\n    return {\n        type: 'DELETE_CATEGORY',\n        params: {\n            _id\n        }\n    }\n}\n\n// ----------------------------------------------------------\n\nexport const hideModal = () => {\n    return {\n        type: 'HIDE_MODAL',\n    }\n}\n\nexport const initModal = (modalData) => {\n    return {\n        type: 'INIT_MODAL',\n        modalData: {...modalData, show: true},\n    }\n}\n\n// ----------------------------------------------------------\n\nexport const updateFormItem = (itemData) => {\n    return {\n        type: 'UPDATE_FORM_ITEM',\n        itemData\n    }\n}\n\n// ----------------------------------------------------------","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {updateFormItem} from \"../../redux/actions\";\n\n\nclass FormElements extends Component {\n    static defaultProps = {\n        items: [],\n        values: [],\n        selectOptions: [],\n        onSubmit: null,\n        currentFormErrors: {},\n    }\n\n    constructor(props) {\n        super(props);\n        let values = {};\n        this.props.updateFormItem(null); // clear at first\n        this.props.items.map((item) => {\n            const itemValue = (this.props.values[item.name] !== undefined) ? this.props.values[item.name] : item.default;\n            this.props.updateFormItem({ name: item.name,value: itemValue });\n            values[item.name] = itemValue === null ? '' : itemValue;\n            return true;\n        });\n        this.state = values;\n    }\n\n    onChange(itemName, e) {\n        this.props.updateFormItem({ name: itemName,value: e.target.value });\n        this.setState({[itemName]: e.target.value});\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.items.map((item) => {\n                    const commonParams = {\n                        id: 'form_input_'+item.name,\n                        className: \"form-control\",\n                        name: item.name,\n                        value: this.state[item.name],\n                        onChange: (e) => this.onChange(item.name, e),\n                    }\n\n                    if (item.type === 'hidden') {\n                        return <input key={'form_' + item.name}\n                            type=\"hidden\"\n                            {...commonParams}/>\n                    } else {\n                        return <div className=\"form-group\" key={'form_' + item.name}>\n                            <label htmlFor={'form_input_' + item.name}>{item.required &&\n                            <span className=\"font-weight-bold text-danger\">*</span>} {item.title}</label>\n                            {this.props.currentFormErrors[item.name] !== undefined &&\n                            <div className=\"text-danger\">{this.props.currentFormErrors[item.name]}</div>}\n                            {(() => {\n                                    switch (item.type) {\n                                        case 'select': {\n                                            return (<select {...commonParams} >\n                                                {this.props.selectOptions[item.name] !== undefined && this.props.selectOptions[item.name].map((option) => {\n                                                    return <option key={'form_select_' + item.name + option.key}\n                                                                   value={option.key}>{option.value.replace(/ /g, \"\\u00a0\")}</option>\n                                                })}\n                                            </select>);\n                                        }\n                                        case 'textarea':\n                                            return <textarea {...commonParams} />\n                                        default:\n                                            return <input\n                                                type=\"text\"\n                                                {...commonParams}/>\n                                    }\n                                }\n                            )()}\n                        </div>\n                    }\n                })}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { currentFormValues: state.currentFormValues, currentFormErrors: state.currentFormErrors }\n};\nconst mapDispatchToProps = {updateFormItem: updateFormItem };\nFormElements = connect(mapStateToProps, mapDispatchToProps)(FormElements);\nexport default FormElements;\n","import FormElements from \"./FormElements\";\n\nexport default FormElements;","export const ADD_CATEGORY_FORM = {\n    items: [\n        {\n            title: \"Parent Category\",\n            name: 'parentId',\n            type: 'select',\n            required: false,\n            default: ''\n        },\n        {\n            title: \"Name\",\n            name: 'title',\n            type: 'text',\n            required: true,\n            default: ''\n        }\n    ]\n}\n\nexport const EDIT_CATEGORY_FORM = {\n    items: [\n        {\n            title: \"Parent Category\",\n            name: 'parentId',\n            type: 'select',\n            required: false,\n            default: ''\n        },\n        {\n            title: \"Name\",\n            name: 'title',\n            type: 'text',\n            required: true,\n            default: ''\n        },\n        {\n            title: \"\",\n            name: '_id',\n            type: 'hidden',\n            default: ''\n        }\n    ]\n}","import React, { Component } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport {editCategory, deleteCategory, initModal} from \"../../redux/actions/\";\nimport {connect} from \"react-redux\";\nimport FormElements from \"../FormElements\"\nimport {EDIT_CATEGORY_FORM} from \"../../forms\";\nimport { prepareCategoriesForSelect } from \"../../services\";\n\nclass CategoriesListItems extends Component {\n    static defaultProps = { parentId: null }\n\n    initEditModal(categoryId) {\n        this.props.initModal({\n            titleText: 'Edit category',\n            isForm: true,\n            bodyText: <FormElements {...EDIT_CATEGORY_FORM} values={ this.props.items.find((e) => e['_id'] === categoryId) } selectOptions={{ parentId: prepareCategoriesForSelect(this.props.items) }}/>,\n            closeBtnText: 'Cancel',\n            confirmBtnText: 'Edit',\n            closeBtnVariant: 'secondary',\n            confirmBtnVariant: 'success',\n            confirmAddData: { type: 'EDIT_CATEGORY', '_id': categoryId  },\n            closeHandler: (props) => { props.hideModal(); },\n            formSubmitHandler: (e, props) => { this.props.editCategory(props.currentFormValues); e.preventDefault(); }\n        });\n    }\n\n    initDeleteModal(categoryId) {\n        this.props.initModal({\n            titleText: 'Delete category',\n            bodyText: 'Are you sure?',\n            closeBtnText: 'Cancel',\n            confirmBtnText: 'Delete',\n            closeBtnVariant: 'secondary',\n            confirmBtnVariant: 'danger',\n            confirmAddData: { type: 'DELETE_CATEGORY', '_id': categoryId },\n            closeHandler: (props) => { props.hideModal(); },\n            confirmHandler: (props) => { this.props.deleteCategory(props.confirmAddData._id); },\n        });\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.props.items !== undefined ? this.props.items.filter((e) => e['parentId'] === this.props.parentId).sort((a, b) => a.title.localeCompare(b.title)).map((item) => {\n                    return (\n                        <li key={item._id}>\n                            {item.title}\n                            <Button variant=\"secondary\" size=\"sm\" className=\"ml-2 m-1\" onClick={() => { this.initEditModal(item._id) } }><i className=\"fa fa-pencil\"></i></Button>\n                            <Button variant=\"danger\" size=\"sm\" className=\"m-1\" onClick={() => {  this.initDeleteModal(item._id) } }><i className=\"fa fa-trash\"></i></Button>\n                            <CategoriesListItems key={'sub_'+item._id} items={this.props.items} parentId={item._id} initModal={this.props.initModal} editCategory={this.props.editCategory} deleteCategory={this.props.deleteCategory} />\n                        </li>\n                    );\n                }) : ''}\n            </ul>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = {initModal: initModal, deleteCategory: deleteCategory, editCategory: editCategory };\nCategoriesListItems = connect(null, mapDispatchToProps)(CategoriesListItems);\nexport default CategoriesListItems;\n","import CategoriesListItems from \"./CategoriesListItems\";\n\nexport default CategoriesListItems;","import React, { Component } from 'react';\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport {getAllCategories, createCategory, initModal} from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport CategoriesListItems from \"../CategoriesListItems\";\nimport Button from \"react-bootstrap/Button\";\nimport FormElements from \"../FormElements\";\nimport {ADD_CATEGORY_FORM} from \"../../forms\";\nimport {prepareCategoriesForSelect} from \"../../services\";\n\nclass ManageCategories extends Component {\n\n    initAddModal() {\n        this.props.initModal({\n            titleText: 'Add new category',\n            isForm: true,\n            bodyText: <FormElements {...ADD_CATEGORY_FORM} selectOptions={{ parentId: prepareCategoriesForSelect(this.props.categories) }} />,\n            closeBtnText: 'Cancel',\n            confirmBtnText: 'Add',\n            closeBtnVariant: 'secondary',\n            confirmBtnVariant: 'success',\n            confirmAddData: { type: 'ADD_CATEGORY' },\n            closeHandler: (props) => { props.hideModal(); },\n            formSubmitHandler: (e, props) => { this.props.createCategory(props.currentFormValues); e.preventDefault(); }\n        });\n    }\n\n    componentDidMount() {\n        this.props.getAllCategories();\n    }\n\n    render() {\n        return  (\n            <>\n                <h3 className=\"mb-3\">Manage Categories</h3>\n                <LoadingSpinner />\n                {this.props.categories !== undefined && !this.props.loading && (\n                    <>\n                        <Button variant=\"secondary\" size=\"sm\" className=\"m-1 mb-3\"  onClick={() => { this.initAddModal() } }><i className=\"fa fa-plus\"></i> Add category</Button>\n                        <CategoriesListItems items={this.props.categories}/>\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ categories: state.categories, loading: state.loading });\nconst mapDispatchToProps = {getAllCategories: getAllCategories, createCategory: createCategory, initModal: initModal};\nManageCategories = connect(mapStateToProps,mapDispatchToProps)(ManageCategories);\nexport default ManageCategories;\n\n","import ManageCategories from \"./ManageCategories\";\n\nexport default ManageCategories;","import ManageRecipes from \"./ManageRecipes\";\n\nexport default ManageRecipes;","import React, { Component } from 'react';\nimport LoadingSpinner from \"../LoadingSpinner\";\n\n\nexport default class ManageRecipes extends Component {\n\n    render() {\n        return  (\n            <span>\n                <h3>Manage Recipes</h3>\n                <LoadingSpinner />\n            </span>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport {connect} from \"react-redux\";\nimport {hideModal} from \"../../redux/actions/\"\n\n\nclass ModalCommon extends Component {\n\n    static defaultProps = {\n        show: false,\n        isForm: false,\n        titleText: '[TITLE]',\n        bodyText: '[BODY]',\n        closeBtnText: '[CLOSE]',\n        confirmBtnText: '[CONFIRM]',\n        closeBtnVariant: 'secondary',\n        confirmBtnVariant: 'danger',\n        closeHandler: (props) => { props.hideModal(); },\n        confirmHandler: () => { },\n        formSubmitHandler: (e,props) => { e.preventDefault() },\n    }\n\n    render() {\n        let innerContent = (\n            <>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.props.titleText}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.props.bodyText}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant={this.props.closeBtnVariant} onClick={() => this.props.closeHandler(this.props)}>\n                        {this.props.closeBtnText}\n                    </Button>\n                    <Button variant={this.props.confirmBtnVariant} onClick={() => this.props.confirmHandler(this.props)} type={this.props.isForm ? 'submit' : 'button'}>\n                        {this.props.confirmBtnText}\n                    </Button>\n                </Modal.Footer>\n            </>\n        );\n\n        return (\n            <Modal\n                   show={this.props.show}\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered\n                   onHide={() => this.props.closeHandler(this.props)}>\n                {this.props.isForm ?\n                    <form onSubmit={(e) => this.props.formSubmitHandler(e, this.props)}>{innerContent}</form>\n                :\n                    innerContent\n                }\n            </Modal>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ ...state.modalData, currentFormValues: state.currentFormValues });\nconst mapDispatchToProps = { hideModal: hideModal };\n\nModalCommon = connect(mapStateToProps,mapDispatchToProps)(ModalCommon);\nexport default ModalCommon;\n","import ModalCommon from \"./ModalCommon\";\n\nexport default ModalCommon;","import React, { Component } from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport {connect} from \"react-redux\";\n\nclass ErrorGlobal extends Component {\n    render() {\n        return (\n            <Alert variant=\"danger\">\n                Something gone wrong: {this.props.errorGlobalMsg}\n            </Alert>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({ errorGlobalMsg: state.errorGlobalMsg});\nErrorGlobal = connect(mapStateToProps,null)(ErrorGlobal);\nexport default ErrorGlobal;","import ErrorGlobal from \"./ErrorGlobal\";\n\nexport default ErrorGlobal;","import ManageArticles from \"./ManageArticles\";\n\nexport default ManageArticles;","import React, { Component } from 'react';\nimport LoadingSpinner from \"../LoadingSpinner\";\n\n\nexport default class ManageArticles extends Component {\n\n    render() {\n        return  (\n            <span>\n                <h3>Manage Articles</h3>\n                <LoadingSpinner />\n            </span>\n        );\n    }\n\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from \"./Header\";\nimport ManageCategories from \"./ManageCategories\";\nimport ManageRecipes from \"./ManageRecipes\";\n\nimport ModalCommon from \"./ModalCommon\";\nimport ErrorGlobal from \"./ErrorGlobal\";\nimport {connect} from \"react-redux\";\nimport ManageArticles from \"./ManageArticles\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <Header/>\n                {this.props.errorGlobal && <ErrorGlobal />}\n                <div className=\"container mt-3\">\n                    <Route path=\"/\" render={() => <h3>Welcome to recipes backend</h3>} exact/>\n                    <Route path=\"/manage_categories/\" component={ManageCategories}/>\n                    <Route path=\"/manage_recipes/\" component={ManageRecipes}/>\n                    <Route path=\"/manage_articles/\" component={ManageArticles}/>\n                </div>\n                <ModalCommon {...this.props.modalData} />\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({ errorGlobal: state.errorGlobal});\n\nApp = connect(mapStateToProps,null)(App);\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport saga from './redux/sagas';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './redux/reducers';\nimport App from './components/App';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware),\n);\nsagaMiddleware.run(saga);\n\nrender(\n    (<Provider store={store}>\n        <App />\n    </Provider>), document.getElementById('root'),\n);"],"sourceRoot":""}